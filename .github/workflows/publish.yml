name: Publish
on:
  push:
    branches:
      - master
    paths:
      - 'package.json'
jobs:
  check-and-publish:
    runs-on: macos-latest
    permissions:
      actions: read/write
      contents: read/write
      packages: read/write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Get previous version
        id: get_previous_version
        run: echo "prev_version=$(git show HEAD~1:package.json | jq -r .version)" >> $GITHUB_OUTPUT
      - name: Get current version
        id: get_current_version
        run: echo "curr_version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
      - name: Compare versions
        id: compare_versions
        run: |
          if [ "${{ steps.get_previous_version.outputs.prev_version }}" != "${{ steps.get_current_version.outputs.curr_version }}" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "No changes to package version"
          fi
      - uses: actions/setup-node@v3
        if: steps.compare_versions.outputs.version_changed == 'true'
        with:
          node-version: 19
      - name: 'Install dependencies'
        if: steps.compare_versions.outputs.version_changed == 'true'
        run: npm ci
      - name: Build and publish electron release
        if: steps.compare_versions.outputs.version_changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run publish
      - run: echo "Release ${{ steps.get_current_version.outputs.curr_version }} is published."
        if: steps.compare_versions.outputs.version_changed == 'true'
